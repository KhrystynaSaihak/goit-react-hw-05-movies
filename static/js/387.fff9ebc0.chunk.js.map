{"version":3,"file":"static/js/387.fff9ebc0.chunk.js","mappings":"2RAEaA,E,QAAkBC,QAAAA,GAAH,0Q,SCmC5B,EA9BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAgBD,GAFzB,OAERE,EAFQ,OAGdP,EAAWO,EAASC,SAHN,gDAKdC,QAAQC,IAAR,MALc,yDAAH,sDAQfN,EAAUH,EACX,GAAE,CAACA,KAEF,SAACL,EAAD,UACIG,EAAQY,OAENZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,WAAYV,EAAhC,EAAgCA,GAAhC,OACV,2BACE,qCAAaQ,MACb,uBAAIC,KACJ,wBAAKE,IAAOD,EAAY,YAAYE,cAH7BZ,EADC,IADZ,6CAUT,C,mMC/BKa,EAAU,mCACVC,EAAM,8BAENC,EAAiB,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACiBD,IAFhB,uBAChBI,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,yFACIH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,oBACgBN,IAFpB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZG,EAAY,mCAAG,WAAMD,GAAN,yFACIH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,4BACwBN,IAF5B,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZhB,EAAe,mCAAG,WAAMkB,GAAN,yFACCH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,4BACwBN,IAFzB,uBACdI,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAOfI,EAAW,mCAAG,WAAMC,GAAN,yFACKN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kCACWD,EADX,kBAC4BS,IAFjC,uBACVL,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/themoviedbService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n\n  li {\n    box-shadow: 2px 6px 6px var(--color-text);\n    border: 1px solid var(--color-text);\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Moment from 'moment';\nimport { getMovieReviews } from 'services/themoviedbService';\n\nimport { ReviewContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async id => {\n      try {\n        const response = await getMovieReviews(id);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData(movieId);\n  }, [movieId]);\n  return (\n    <ReviewContainer>\n      {!reviews.length\n        ? \"We don't have any reviews for this movie.\"\n        : reviews.map(({ author, content, created_at, id }) => (\n            <li key={id}>\n              <h4>Author: {author}</h4>\n              <p>{content}</p>\n              <h5>{Moment(created_at, 'YYYYMMDD').fromNow()}</h5>\n            </li>\n          ))}\n    </ReviewContainer>\n  );\n};\n\nexport default Reviews;\n","import Axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '2b316c342fe13f9049052886494c29f1';\nconst URL = 'https://api.themoviedb.org/';\n\nconst getTrendingMovies = async () => {\n  const { data } = await Axios.get(\n    `${URL}3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst getMovieById = async movie_id => {\n  const { data } = await Axios.get(\n    `${URL}3/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst getMovieCast = async movie_id => {\n  const { data } = await Axios.get(\n    `${URL}3/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst getMovieReviews = async movie_id => {\n  const { data } = await Axios.get(\n    `${URL}3/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst searchMovie = async query => {\n  const { data } = await Axios.get(\n    `${URL}3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  searchMovie,\n};\n"],"names":["ReviewContainer","styled","useState","reviews","setReviews","movieId","useParams","useEffect","fetchData","id","getMovieReviews","response","results","console","log","length","map","author","content","created_at","Moment","fromNow","API_KEY","URL","getTrendingMovies","Axios","data","getMovieById","movie_id","getMovieCast","searchMovie","query"],"sourceRoot":""}