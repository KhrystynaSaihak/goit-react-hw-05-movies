{"version":3,"file":"static/js/736.23b13617.chunk.js","mappings":"wQAEaA,E,QAAgBC,QAAAA,GAAH,2O,mBCoC1B,EA7Ba,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAaD,GAFtB,OAERE,EAFQ,OAGdP,EAAQO,EAASR,MAHH,gDAKdS,QAAQC,IAAR,MALc,yDAAH,sDAQfL,EAAUH,EACX,GAAE,CAACA,KAGF,SAACL,EAAD,UACGG,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,UAAWR,EAAlC,EAAkCA,GAAlC,OACR,2BACE,wBAAKM,KACL,gBAAKG,IAAKF,EAvBJ,kCAuB6BA,EAAeG,EAAKC,IAAI,MAC3D,uBAAIH,MAHGR,EADD,KASf,C,mMChCKY,EAAU,mCACVC,EAAM,8BAENC,EAAiB,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACiBD,IAFhB,uBAChBI,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,yFACIH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,oBACgBN,IAFpB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZf,EAAY,mCAAG,WAAMiB,GAAN,yFACIH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,4BACwBN,IAF5B,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZG,EAAe,mCAAG,WAAMD,GAAN,yFACCH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,4BACwBN,IAFzB,uBACdI,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAOfI,EAAW,mCAAG,WAAMC,GAAN,yFACKN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kCACWD,EADX,kBAC4BS,IAFjC,uBACVL,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/themoviedbService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n\n  li {\n    box-shadow: 2px 6px 6px var(--color-text);\n    border: 1px solid var(--color-text);\n  }\n  img {\n    display: block;\n    width: 200px;\n  }\n`;\n","import img from './../../images/person.png';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CastContainer } from './Cast.styled';\n\nimport { getMovieCast } from 'services/themoviedbService';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async id => {\n      try {\n        const response = await getMovieCast(id);\n        setCast(response.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData(movieId);\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {cast.map(({ name, profile_path, character, id }) => (\n        <li key={id}>\n          <h4>{name}</h4>\n          <img src={profile_path ? IMG_URL + profile_path : img} alt=\"\" />\n          <p>{character}</p>\n        </li>\n      ))}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import Axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '2b316c342fe13f9049052886494c29f1';\nconst URL = 'https://api.themoviedb.org/';\n\nconst getTrendingMovies = async () => {\n  const { data } = await Axios.get(\n    `${URL}3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst getMovieById = async movie_id => {\n  const { data } = await Axios.get(\n    `${URL}3/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst getMovieCast = async movie_id => {\n  const { data } = await Axios.get(\n    `${URL}3/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst getMovieReviews = async movie_id => {\n  const { data } = await Axios.get(\n    `${URL}3/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst searchMovie = async query => {\n  const { data } = await Axios.get(\n    `${URL}3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  searchMovie,\n};\n"],"names":["CastContainer","styled","useState","cast","setCast","movieId","useParams","useEffect","fetchData","id","getMovieCast","response","console","log","map","name","profile_path","character","src","img","alt","API_KEY","URL","getTrendingMovies","Axios","data","getMovieById","movie_id","getMovieReviews","searchMovie","query"],"sourceRoot":""}